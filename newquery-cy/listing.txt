% @begin C3_C4_map_present_NA
@in mstmip_SYNMAP_NA_QD.nc @as SYNMAP_land_cover_map_data
@in mean_airtemp @uri file:c3c4input/monthly/2000-2010/air.2m_monthly_2000_2010.mean.{month}.nc
@in mean_precip @uri file:c3c4input/monthly/2000-2010/apcp_monthly_2000_2010_mean.{month}.nc
@out C3_fraction_data @uri file:mstmip_SYNMAP_PRESENTVEG_C3Grass_RelaFrac_NA_v2.0.nc
@out C4_fraction_data @uri file:mstmip_SYNMAP_PRESENTVEG_C4Grass_RelaFrac_NA_v2.0.nc
@out Grass_fraction_data @uri file:mstmip_SYNMAP_PRESENTVEG_Grass_Fraction_NA_v2.0.nc
clear all
% @begin fetch_SYNMAP_land_cover_map_variable
@in mstmip_SYNMAP_NA_QD.nc @as SYNMAP_land_cover_map_data
@out lon @as lon_variable
@out lat @as lat_variable
@out lon_bnds @as lon_bnds_variable
@out lat_bnds @as lat_bnds_variable
% Load input: SYNMAP land cover classification map; also read coordinate variables to re-use them later
% @end fetch_SYNMAP_land_cover_map_variable
% @begin fetch_monthly_mean_air_temperature_data
@in mean_airtemp @uri file:c3c4input/monthly/2000-2010/air.2m_monthly_2000_2010.mean.{month}.nc
@out Tair @as Tair_Matrix
% Load input: long-term monthly mean air temperature data
% @end fetch_monthly_mean_air_temperature_data
% @begin fetch_monthly_mean_precipitation_data
@in mean_precip @uri file:c3c4input/monthly/2000-2010/apcp_monthly_2000_2010_mean.{month}.nc
@out Rain @as Rain_Matrix
% Load input: long-term monthly mean precipitation data
% @end fetch_monthly_mean_precipitation_data
% @begin initialize_Grass_Matrix
@out Grass @as Grass_variable
% Initialize Grass Matrix
% @end initialize_Grass_Matrix
% @begin examine_pixels_for_grass
@in Tair @as Tair_Matrix
@in Rain @as Rain_Matrix
@out C3 @as C3_Data
@out C4 @as C4_Data
% Algorithm 1: method used in MstMIP
examine the type of each pixel to see if it includes grass
% @end examine_pixels_for_grass
% Algorithm 2: a more complicated method
examine the type of each pixel to see if it includes grass
C3=ones(ncols, nrows)*(-999.0);
C4=ones(ncols, nrows)*(-999.0);
for i=1:ncols
for j=1:nrows
frac_c3=0.0;
frac_c4=0.0;
m_c4=0;
if (Grass(i,j)>0)
nmonth_c3=0;
nmonth_c4=0;
for m=1:12
if (Tair(i,j,m)<295)
nmonth_c3=nmonth_c3+1;
elseif (Tair(i,j,m)>=295 & Rain(i,j,m)>=2.5)
nmonth_c4=nmonth_c4+1;
m_c4(nmonth_c4)=m;
elseif (Tair(i,j,m)>=295 & Rain(i,j,m)<=2.5)
nmonth_c3=nmonth_c3+1;
end
end
if (nmonth_c3==12)
frac_c3=1.0;
frac_c4=0.0;
elseif (nmonth_c4>=6)
frac_c3=0;
frac_c4=1;
else
frac_c4=nmonth_c4/12;
frac_c3=1-frac_c4;
end
end
C3(i,j)=frac_c3;
C4(i,j)=frac_c4;
end
end
% @begin generate_netcdf_file_for_C3_fraction
@in lon_variable
@in lat_variable
@in lon_bnds_variable
@in lat_bnds_variable
@in C3_Data
@out C3_fraction_data @uri file:mstmip_SYNMAP_PRESENTVEG_C3Grass_RelaFrac_NA_v2.0.nc
% Output the netcdf file for C3 fraction
reuse longitude, latitude, and boundary variables from land cover input file
create netCDF dataset (filename,mode)
netcdf.putAtt(moncid, mvid_data, 'units', ovunits);
netcdf.putAtt(moncid, mvid_data, 'cell_methods', ocell_methods);
netcdf.putAtt(moncid, mvid_data, '_FillValue', nodatavalue);
put global attributes
Enter into data mode to write data
Put aux data in long term mean data
% @end generate_netcdf_file_for_C3_fraction
% @begin generate_netcdf_file_for_C4_fraction
@in lon_variable
@in lat_variable
@in lon_bnds_variable
@in lat_bnds_variable
@in C4_Data
@out C4_fraction_data @uri file:mstmip_SYNMAP_PRESENTVEG_C4Grass_RelaFrac_NA_v2.0.nc
% Output the netcdf file for C4 fraction
reuse longitude, latitude, and boundary variables from land cover input file
create netCDF dataset (filename,mode)
netcdf.putAtt(moncid, mvid_data, 'units', ovunits);
netcdf.putAtt(moncid, mvid_data, 'cell_methods', ocell_methods);
netcdf.putAtt(moncid, mvid_data, '_FillValue', nodatavalue);
put global attributes
Enter into data mode to write data
Put aux data in long term mean data
% @end generate_netcdf_file_for_C4_fraction
% @begin generate_netcdf_file_for_Grass_fraction
@in lon_variable
@in lat_variable
@in lon_bnds_variable
@in lat_bnds_variable
@in Grass_variable
@out Grass_fraction_data @uri file:mstmip_SYNMAP_PRESENTVEG_Grass_Fraction_NA_v2.0.nc
% Output the netcdf file for Grass fraction
reuse longitude, latitude, and boundary variables from land cover input file
create netCDF dataset (filename,mode)
variable name is 'crs'? type 'char'
netcdf.putAtt(moncid, mvid_data, 'units', ovunits);
netcdf.putAtt(moncid, mvid_data, 'cell_methods', ocell_methods);
netcdf.putAtt(moncid, mvid_data, '_FillValue', nodatavalue);
put global attributes
Enter into data mode to write data
Put aux data in long term mean data
% @end generate_netcdf_file_for_Grass_fraction
% @end C3_C4_map_present_NA
